{
   "paths": {
     "/api/orders/{id}": {
       "get": {
         "tags": ["Order"],
         "summary": "Retrieve an order by ID",
         "description": "Fetches the details of a specific order using the order ID.",
         "parameters": [
           {
             "name": "id",
             "in": "path",
             "required": true,
             "description": "ID of the order to retrieve.",
             "schema": {
               "type": "integer",
               "format": "int32"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "Order retrieved successfully.",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Order"
                 }
               }
             }
           },
           "404": {
             "description": "Order not found."
           }
         }
       }
     },
     "/api/orders": {
       "get": {
         "tags": ["Order"],
         "summary": "List all orders with pagination",
         "description": "Retrieves a list of orders with optional pagination.",
         "parameters": [
           {
             "name": "page",
             "in": "query",
             "description": "Page number for pagination (default is 1).",
             "schema": {
               "type": "integer",
               "format": "int32",
               "default": 1
             }
           },
           {
             "name": "size",
             "in": "query",
             "description": "Number of orders per page (default is 5).",
             "schema": {
               "type": "integer",
               "format": "int32",
               "default": 5
             }
           }
         ],
         "responses": {
           "200": {
             "description": "Orders retrieved successfully.",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "array",
                   "items": {
                     "$ref": "#/components/schemas/Order"
                   }
                 }
               }
             }
           }
         }
       },
       "post": {
         "tags": ["Order"],
         "summary": "Create a new order",
         "description": "Creates a new order with the provided details.",
         "requestBody": {
           "description": "Order object that needs to be added.",
           "required": true,
           "content": {
             "application/json": {
               "schema": {
                 "$ref": "#/components/schemas/Order"
               }
             }
           }
         },
         "responses": {
           "201": {
             "description": "Order created successfully.",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Order"
                 }
               }
             }
           },
           "400": {
             "description": "Invalid input, object invalid."
           }
         }
       }
     },
     "/api/orders/edit": {
       "post": {
         "tags": ["Order"],
         "summary": "Update an existing order",
         "description": "Updates the details of an existing order based on the provided order object.",
         "requestBody": {
           "description": "Updated order object.",
           "required": true,
           "content": {
             "application/json": {
               "schema": {
                 "$ref": "#/components/schemas/Order"
               }
             }
           }
         },
         "responses": {
           "200": {
             "description": "Order updated successfully.",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Order"
                 }
               }
             }
           },
           "404": {
             "description": "Order not found."
           }
         }
       }
     },
     "/api/orders/delete": {
       "delete": {
         "tags": ["Order"],
         "summary": "Delete an order by ID",
         "description": "Deletes an order based on the provided order ID.",
         "parameters": [
           {
             "name": "id",
             "in": "query",
             "required": true,
             "description": "ID of the order to delete.",
             "schema": {
               "type": "integer",
               "format": "int32"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "Order deleted successfully.",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Order"
                 }
               }
             }
           },
           "404": {
             "description": "Order not found."
           }
         }
       }
     }
   },
   "components": {
     "schemas": {
       "Order": {
         "type": "object",
         "properties": {
           "id": {
             "type": "integer",
             "format": "int64"
           },
           "userId": {
             "type": "integer",
             "format": "int64"
           },
           "productId": {
             "type": "integer",
             "format": "int64"
           },
           "orderQuantity": {
             "type": "integer",
             "format": "int32"
           },
           "orderTotal": {
             "type": "number",
             "format": "double"
           },
           "orderDate": {
             "type": "string",
             "format": "date-time"
           },
           "orderDescription": {
             "type": "string",
             "nullable": true
           }
         },
         "additionalProperties": false
       }
     }
   }
 }
 