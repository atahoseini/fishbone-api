{
  "paths": {
    "/api/users/username/{username}": {
      "get": {
        "tags": ["User"],
        "summary": "Retrieve a user by username",
        "description": "Fetches the details of a specific user using the username.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Username of the user to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/users/id/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Retrieve a user by ID",
        "description": "Fetches the details of a specific user using the user ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["User"],
        "summary": "List all users with pagination",
        "description": "Retrieves a list of users with optional pagination.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (default is 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of users per page (default is 5).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "pageCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "description": "Creates a new user with the provided details.",
        "requestBody": {
          "description": "User object that needs to be added.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid."
          }
        }
      }
    },
    "/api/users/edit": {
      "post": {
        "tags": ["User"],
        "summary": "Update an existing user",
        "description": "Updates the details of an existing user based on the provided user object.",
        "requestBody": {
          "description": "Updated user object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/users/all": {
      "get": {
        "tags": ["User"],
        "summary": "List all users without pagination",
        "description": "Retrieves a list of all users without pagination.",
        "responses": {
          "200": {
            "description": "All users retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "passwordSalt": {
            "type": "string",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
